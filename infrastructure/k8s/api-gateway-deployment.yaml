apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: find-dining
  labels:
    app.kubernetes.io/name: api-gateway
    app.kubernetes.io/instance: find-dining
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: api-gateway
    app.kubernetes.io/part-of: find-dining-platform
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: api-gateway
      app.kubernetes.io/instance: find-dining
  template:
    metadata:
      labels:
        app.kubernetes.io/name: api-gateway
        app.kubernetes.io/instance: find-dining
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/component: api-gateway
    spec:
      serviceAccountName: find-dining-service-account
      imagePullSecrets:
        - name: ecr-registry-secret
      containers:
        - name: api-gateway
          image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/find-dining/api-gateway:latest
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: find-dining-config
                  key: NODE_ENV
            - name: PORT
              value: "3000"
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: find-dining-config
                  key: LOG_LEVEL
            - name: USER_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: find-dining-config
                  key: USER_SERVICE_URL
            - name: RESTAURANT_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: find-dining-config
                  key: RESTAURANT_SERVICE_URL
            - name: RECOMMENDATION_ENGINE_URL
              valueFrom:
                configMapKeyRef:
                  name: find-dining-config
                  key: RECOMMENDATION_ENGINE_URL
            - name: REVIEW_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: find-dining-config
                  key: REVIEW_SERVICE_URL
            - name: EMOTION_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: find-dining-config
                  key: EMOTION_SERVICE_URL
            - name: DATA_INTEGRATION_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: find-dining-config
                  key: DATA_INTEGRATION_SERVICE_URL
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: find-dining-secrets
                  key: JWT_SECRET
            - name: RATE_LIMIT_WINDOW_MS
              valueFrom:
                configMapKeyRef:
                  name: find-dining-config
                  key: RATE_LIMIT_WINDOW_MS
            - name: RATE_LIMIT_MAX_REQUESTS
              valueFrom:
                configMapKeyRef:
                  name: find-dining-config
                  key: RATE_LIMIT_MAX_REQUESTS
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            capabilities:
              drop:
                - ALL
      securityContext:
        fsGroup: 2000

---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: find-dining
  labels:
    app.kubernetes.io/name: api-gateway
    app.kubernetes.io/instance: find-dining
    app.kubernetes.io/component: api-gateway
spec:
  type: ClusterIP
  ports:
    - port: 3000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: api-gateway
    app.kubernetes.io/instance: find-dining