name: Build and Deploy Mobile App

on:
  push:
    branches: [main, develop]
    paths: ['mobile-app/**']
  pull_request:
    branches: [main]
    paths: ['mobile-app/**']

env:
  NODE_VERSION: '18'
  JAVA_VERSION: '11'
  XCODE_VERSION: '15.0'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile-app/package-lock.json
      
      - name: Install dependencies
        working-directory: mobile-app
        run: npm ci
      
      - name: Run tests
        working-directory: mobile-app
        run: npm test -- --coverage --watchAll=false
      
      - name: Run accessibility tests
        working-directory: mobile-app
        run: npm run test:accessibility
      
      - name: Run performance tests
        working-directory: mobile-app
        run: npm run test:performance

  build-android:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile-app/package-lock.json
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      
      - name: Install dependencies
        working-directory: mobile-app
        run: npm ci
      
      - name: Create Android keystore
        working-directory: mobile-app/android/app
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > release.keystore
      
      - name: Build Android APK
        working-directory: mobile-app
        run: |
          cd android
          ./gradlew assembleRelease
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      
      - name: Build Android AAB
        working-directory: mobile-app
        run: |
          cd android
          ./gradlew bundleRelease
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      
      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: |
            mobile-app/android/app/build/outputs/apk/release/*.apk
            mobile-app/android/app/build/outputs/bundle/release/*.aab

  build-ios:
    needs: test
    runs-on: macos-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: mobile-app/package-lock.json
      
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}
      
      - name: Install dependencies
        working-directory: mobile-app
        run: npm ci
      
      - name: Install CocoaPods
        working-directory: mobile-app/ios
        run: pod install
      
      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_CERTIFICATES_P12 }}
          p12-password: ${{ secrets.IOS_CERTIFICATES_PASSWORD }}
      
      - name: Install Provisioning Profile
        uses: Apple-Actions/download-provisioning-profiles@v2
        with:
          bundle-id: com.finddining.app
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
      
      - name: Build iOS
        working-directory: mobile-app
        run: |
          xcodebuild -workspace ios/FindDining.xcworkspace \
            -scheme FindDining \
            -configuration Release \
            -destination generic/platform=iOS \
            -archivePath ios/build/FindDining.xcarchive \
            archive
      
      - name: Export IPA
        working-directory: mobile-app
        run: |
          xcodebuild -exportArchive \
            -archivePath ios/build/FindDining.xcarchive \
            -exportPath ios/build \
            -exportOptionsPlist ios/ExportOptions.plist
      
      - name: Upload iOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: mobile-app/ios/build/*.ipa

  deploy-android:
    needs: build-android
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download Android artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-build
          path: ./artifacts
      
      - name: Deploy to Google Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: com.finddining.app
          releaseFiles: ./artifacts/mobile-app/android/app/build/outputs/bundle/release/*.aab
          track: production
          status: completed

  deploy-ios:
    needs: build-ios
    runs-on: macos-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download iOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: ios-build
          path: ./artifacts
      
      - name: Deploy to App Store
        uses: Apple-Actions/upload-testflight-build@v1
        with:
          app-path: ./artifacts/*.ipa
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}